name: Publish

on:
  workflow_dispatch:
    inputs:
      skip-automatic-bump:
        description: Whether to skip the automatic bumping of the packageversion
        type: boolean
        default: false

jobs:
  PublishVersion:
    name: Publish favware/concourse-discord-webhook-resource
    runs-on: ubuntu-latest
    if: github.repository_owner == 'favware'
    outputs:
      new_version: ${{ steps.StoreNewVersion.outputs.new_version }}
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: main
          token: ${{ secrets.BOT_TOKEN }}
      - name: Use Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
          registry-url: https://registry.yarnpkg.com/
      - name: Install Dependencies
        run: yarn --immutable
      - name: Configure Git
        run: |
          git remote set-url origin "https://${GITHUB_TOKEN}:x-oauth-basic@github.com/${GITHUB_REPOSITORY}.git"
          git config --local user.email "${GITHUB_EMAIL}"
          git config --local user.name "${GITHUB_USER}"
        env:
          GITHUB_USER: github-actions[bot]
          GITHUB_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Bump Versions and make release
        run: |
          if [ "${{ github.event.inputs.skip-automatic-bump }}" = "true" ]; then
            yarn bump --skip-automatic-bump
          else
            yarn bump
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Store new version
        id: StoreNewVersion
        run: |
          new_version=$(node -e "console.log(require('./package.json').version)")
          echo "new_version=${new_version}" >> "$GITHUB_OUTPUT"

  PublishImage:
    name: Publish image to container registries
    runs-on: ubuntu-latest
    needs: PublishVersion
    steps:
      - name: Checkout Project
        uses: actions/checkout@v4
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1
      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6.6.1
        with:
          push: true
          context: .
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: |
            linux/amd64
            linux/arm64
          tags: |
            favware/concourse-discord-webhook-resource:${{ needs.PublishVersion.outputs.new_version }}
            favware/concourse-discord-webhook-resource:latest
            ghcr.io/favware/concourse-discord-webhook-resource:${{ needs.PublishVersion.outputs.new_version }}
            ghcr.io/favware/concourse-discord-webhook-resource:latest
      - name: Update repo description
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: favware/concourse-discord-webhook-resource
          enable-url-completion: true
          short-description: Extensive Pokemon GraphQL API
